#!/bin/bash -e

if [ "$TRAVIS" ]; then
  if [ "$TRAVIS_PULL_REQUEST" != false ] || [ "$TRAVIS_BRANCH" != master ]; then
    echo not deploying since this isn\'t the master branch
    exit
  fi
fi

if ! [ -e build ]; then
  echo build directory does not exist >&2
  exit 2
fi

echo deploying...

# if we're in a travis build, decrypt and use the deploy key (otherwise just
# rely on some existing authentication)
if [ $TRAVIS ]; then
  openssl aes-256-cbc \
    -K $encrypted_025a83c067be_key \
    -iv $encrypted_025a83c067be_iv \
    -in everywherebible-deploy-key.enc \
    -out everywherebible-deploy-key \
    -d
  chmod 600 everywherebible-deploy-key
  eval `ssh-agent -s`
  ssh-add everywherebible-deploy-key
fi

msg="master@`git log --pretty=oneline -n 1 --abbrev-commit`"

# deploying to the old esvbible.github.io repo because it's cheap static site
# hosting.
git clone \
  -b master \
  --single-branch \
  --depth 1 \
  git@github.com:esvbible/esvbible.github.io.git \
  deployrepo

cp deployrepo/{.nojekyll,CNAME} ./
rm -rf deployrepo/*
cp -r build/* deployrepo/
cp .nojekyll CNAME deployrepo/
cd deployrepo

if ! git diff 2>&1 1>/dev/null; then
  echo no changes, exiting
  exit
fi

git add .
git commit -am "$msg"

git remote -v
git push
